<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.3.xsd
		http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<annotation-driven />

	<resources mapping="/images/**" location="/resources/images/" />
	<resources mapping="/css/**" location="/resources/css/" />
	<resources mapping="/js/**" location="/resources/js/" />
	<resources mapping="/admin/**" location="/resources/admin/" />

	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
		<beans:property name="order" value="3"/>
	</beans:bean>
	
	<beans:bean id="chattingHandler" class="open.sesame.chat.ChattingHandler"/>
	
	<websocket:handlers>
		<websocket:mapping handler="chattingHandler" path="/chatting" />
			<websocket:handshake-interceptors>
			<beans:bean class="org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor" />
		</websocket:handshake-interceptors>
		<websocket:sockjs></websocket:sockjs>
	</websocket:handlers>
	
	<beans:bean class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<beans:property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView"/>
		<beans:property name="order" value="2"/>
	</beans:bean>
	
	<beans:bean class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<beans:property name="definitions">
			<beans:list>
				<beans:value>/WEB-INF/spring/appServlet/tiles.xml</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>
	
	<beans:bean id="mailSender"	class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<beans:property name="host" value="smtp.gmail.com" />
		<beans:property name="port" value="587" /><!-- 465 or 25 -->
		<beans:property name="username" value="happybok93@gmail.com" />
		<beans:property name="password" value="qtillcljfwbvksfo" />
		<beans:property name="defaultEncoding" value="utf-8" />
		<beans:property name="javaMailProperties">
			<beans:props>
				<beans:prop key="mail.transport.protocol">smtp</beans:prop>
				<beans:prop key="mail.smtp.auth">true</beans:prop>
				<beans:prop key="mail.smtp.starttls.enable">true</beans:prop>
				<beans:prop key="mail.debug">true</beans:prop>
		
			</beans:props>
		</beans:property>
	</beans:bean>
	
	
	
	<beans:bean class="org.springframework.web.multipart.commons.CommonsMultipartResolver" id="multipartResolver">
		<!-- maxUploadSize 필드에 최대 업로드 파일의 제한 용량(Byte)을 주입 -->
		<beans:property name="maxUploadSize" value="20971520"/>
		<!-- defaultEncoding 필드에 전달값에 대한 캐릭셋의 인코딩 방식을 주입 -->
		<beans:property name="defaultEncoding" value="utf-8"/>
	</beans:bean>
	
	<context:component-scan base-package="open.sesame.admin.controller" />
	<context:component-scan base-package="open.sesame.controller" />
	<context:component-scan base-package="open.sesame.dao" />
	<context:component-scan base-package="open.sesame.service" />
	<context:component-scan base-package="open.sesame.chat" />
	<context:component-scan base-package="open.sesame.mail" />
	
		<!-- Interceptor 관련 클래스를 Spring Bean으로 등록 -->
	<beans:bean class="open.sesame.util.AdminAuthInterceptor" id="adminAuthInterceptor"/>
	<beans:bean class="open.sesame.util.LoginAuthInterceptor" id="loginAuthInterceptor"/>
	
	<!-- interceptors : interceptor 엘리먼트를 등록하기 위한 엘리먼트-->
	<interceptors>
		<interceptor>
			<mapping path="/admin"/>
			<beans:ref bean="adminAuthInterceptor"/>
		</interceptor>
	</interceptors>
	<!--  
	<interceptors>
		<interceptor>
			<mapping path="/reserve"/>
			<beans:ref bean="loginAuthInterceptor"/>
		</interceptor>
	</interceptors> 
	-->

</beans:beans>
